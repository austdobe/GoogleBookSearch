{"version":3,"sources":["components/BookSearch/index.js","components/Nav/index.js","components/MainContainer/index.js","components/SavedBooks/index.js","App.js","registerServiceWorker.js","index.js"],"names":["styling","searchbar","margin","width","books","padding","backgroundColor","color","cardImage","maxHeight","maxWidth","BookSearch","_useState","useState","_useState2","Object","slicedToArray","book","setBook","_useState3","_useState4","results","setResults","_useState5","APIKey","handleClick","event","react_default","a","createElement","className","onSubmit","preventDefault","axios","get","then","data","items","console","log","style","type","name","placeholder","onChange","target","value","container","map","href","volumeInfo","previewLink","title","src","imageLinks","thumbnail","alt","description","onClick","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","header","content","paddingTop","paddingBottom","marginTop","MainContainer","components_BookSearch","SavedBooks","App","minHeight","react_router_dom","Nav","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0c837cff.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nconst styling={\r\n    searchbar: {\r\n        margin: \"20px auto\",\r\n        width: '100%'\r\n    },\r\n    books: {\r\n        margin: \"10px 20px\",\r\n        padding: \"10px 20px\",\r\n        backgroundColor: \"#929195\",\r\n        color: \"black\"\r\n    },\r\n    cardImage:{\r\n        maxHeight: '200',\r\n        maxWidth: '200px',\r\n        margin: '10px auto'\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction BookSearch(){\r\n\r\n    const [book, setBook] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [APIKey] = useState('AIzaSyDz2jlBCa3uarUkN6NL7pia07KhtHKGEBc');\r\n\r\n    function handleChange(event){\r\n\r\n        const book = event.target.value;\r\n\r\n        setBook(book);\r\n\r\n    };\r\n    function handleSubmit(event){\r\n\r\n        event.preventDefault();\r\n\r\n        axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+book+\"&key=\"+APIKey+\"&maxResults=40\")\r\n        .then(data =>{\r\n            setResults(data.data.items);\r\n            console.log(data.data.items)\r\n            return results;\r\n        })\r\n\r\n    };\r\n    function handleClick(event){\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <input \r\n                    style={styling.searchbar}\r\n                    type='text'\r\n                    name='search'\r\n                    placeholder=\"Book Name\"\r\n                    onChange={handleChange}></input>\r\n                </div>\r\n                <div>\r\n                    <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    >\r\n                    Search</button>\r\n                </div>\r\n            </form>\r\n            <div className='container' style={styling.container}>\r\n                {\r\n                    results.map(book =>(\r\n                        <div className='card' style={styling.books}>\r\n                            <a\r\n                            style={{color: \"black\"}} \r\n                            href={book.volumeInfo.previewLink}className='card-header'>{book.volumeInfo.title}</a>\r\n                            <img \r\n                            style={styling.cardImage}\r\n                            src={book.volumeInfo.imageLinks.thumbnail} alt={book.title}/>\r\n                            <p>{book.volumeInfo.description}</p>\r\n                            <button type=\"button\"\r\n                            onClick={handleClick}>Save</button>\r\n                        </div>\r\n                    ))\r\n                } \r\n                  \r\n            </div>\r\n        </div>      \r\n    )\r\n}\r\n\r\nexport default BookSearch","import React from 'react'\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg \" >\r\n            <a className=\"navbar-brand\" href=\"/\">Google Book Search</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/saved\">Saved Books</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport BookSearch from '../BookSearch'\r\nimport navbar from '../Nav'\r\nconst styling = {\r\n    header:{\r\n        backgroundColor: '#F8B195',\r\n        width: '100%'\r\n    },\r\n    content:{\r\n        paddingTop: '10px',\r\n        paddingBottom: '10px',\r\n        backgroundColor: '#c06c84',\r\n        marginTop: '20px'\r\n    },\r\n }\r\nfunction MainContainer(){\r\n    return(\r\n        <div>\r\n            <navbar />\r\n          \r\n            <div className=\"container\" >\r\n                <div className=\"card\" style={styling.content}>\r\n                    <div className=\"card-header\">\r\n                        <p>Enter a book name or author you are interested in.</p>\r\n                    </div>\r\n                    <BookSearch />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContainer","import React from 'react';\r\n\r\n\r\nfunction SavedBooks(){\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedBooks","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport MainContainer from './components/MainContainer'\r\nimport Navbar from \"./components/Nav\";\r\nimport SavedBooks from \"./components/SavedBooks\"\r\nconst styling ={\r\n  App:{\r\n    backgroundColor: '#6c5b7b',\r\n    minHeight: \"100vh\"\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div style={styling.App}>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainContainer} />\r\n          <Route exact path =\"/api/saveBook\" component={SavedBooks} />\r\n          {/* <Route component={NoMatch} /> */}\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}